.searchFieldContainer {
  position: relative;
  display: flex;
  flex-direction: row;
  align-items: flex-start;
  background: var(--ds-color-neutral-surface-default);
  //border: var(--ds-border-width-default) solid var(--ds-color-neutral-border-subtle);
  //border-radius: var(--ds-border-radius-md);
}

.searchInputIcon {
  position: absolute;
  top: var(--ds-size-2);
  left: var(--ds-size-3);
  width: var(--ds-size-6);
  height: var(--ds-size-6);
  color: var(--ds-color-neutral-text-subtle);
}

.searchInputWithIcon {
  .styledInput,
  .input {
    padding-left: calc(var(--ds-size-6) + var(--ds-size-3)); // icon size + gap
    padding-right: var(--ds-size-4); // clear-button
  }
}

.searchInputContainer {
  --search-input-surface: var(--ds-color-neutral-surface-default, #fff);
  position: relative;
  height: var(--ds-size-12);

  // If we have an expandable container, add focus styles to it, if not, add to this container
  &:not(:has(.expandableInputContainer)),
  .expandableInputContainer {
    display: flex;
    flex-direction: row;
    flex: 0 0 auto;
    gap: var(--ds-size-3);
    position: relative;
    align-items: center;
    z-index: 2;
    padding-left: var(--ds-size-3);
    padding-right: var(--ds-size-3);
    background: var(--search-input-surface);
    border-top: var(--ds-border-width-default) solid var(--ds-color-neutral-border-subtle);
    border-bottom: var(--ds-border-width-default) solid var(--ds-color-neutral-border-subtle);

    &:has(:focus) {
      border-color: transparent;
      border-radius: var(--ds-border-radius-md);
      box-shadow: var(--_ds--focus, var(--dsc-focus-boxShadow));
      outline: var(--_ds--focus, var(--dsc-focus-outline));
      outline-offset: var(--_ds--focus, var(--ds-border-width-focus));
      transition: width 0.2s ease-in-out;
      z-index: 3;
    }
  }

  .expandableInputContainer {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    min-height: 100%;
  }

  &.searchQueryContainer {
    flex: 1 1 auto;
    min-width: 0;
    border: none;

    .expandableInputContainer {
      border-left: var(--ds-border-width-default) solid var(--ds-color-neutral-border-subtle);
      border-top-left-radius: var(--ds-border-radius-md);
      border-bottom-left-radius: var(--ds-border-radius-md);

      &:has(:focus) {
        border-color: transparent;
      }
    }
  }

  &.enhetSelectorContainer {
  }

  .searchIconContainer {
    flex: 0 0 auto;
    width: var(--ds-size-7);
    height: var(--ds-size-7);
  }
}

.styledInputContainer {
  position: relative;
  z-index: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;

  .input {
    color: transparent;
    background: transparent;
  }

  &:has(:focus) {
    .styledInput {
      white-space: pre-wrap;
    }
  }
}

.styledInput,
.input {
  border: none;
  background: transparent;
  color: var(--ds-color-neutral-text-default);
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  letter-spacing: normal;
  padding-top: calc(var(--ds-size-2) + var(--ds-border-width-default));
  padding-bottom: var(--ds-size-2);
  min-height: calc(var(--ds-size-12) - var(--ds-border-width-default)*2 ); // Full height minus borders
}

.styledInput {
  overflow: hidden;
  pointer-events: none;
  z-index: 2;
  position: relative;
  white-space: nowrap;
}

.searchFieldContainer :not(:has(:focus)) .styledInput::after {
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0;
    width: var(--ds-size-8);
    background: linear-gradient(
      to right,
      rgba(255, 255, 255, 0),
      var(--search-input-surface)
    );
    border-right: var(--ds-size-6) solid var(--ds-color-neutral-surface-default, #fff);
    pointer-events: none;
}

.input {
  position: absolute;
  top: 0;
  left: 0;
  flex: 1 1 auto;
  width: 100%;
  color: transparent;
  caret-color: var(--ds-color-neutral-text-default);
  z-index: 2;
  overflow: hidden;
  resize: none;
  white-space: nowrap;
  border: none;
  margin: 0;

  &:focus,
  &:focus-visible {
    box-shadow: none;
    outline: none;
    white-space: pre-wrap;
  }
  
  &::selection,
  &::-moz-selection {
    background-color: var(--ds-color-surface-active);
    color: var(--ds-color-neutral-text-default);
  }
}

.searchToken {
  position: relative;
}

.prefixedToken {
  position: relative;
  border-radius: var(--ds-border-radius-sm);
  color: var(--ds-color-neutral-text-subtle);
  background: var(--ds-color-neutral-surface-tinted);
  outline: 1px solid var(--ds-color-neutral-surface-tinted);
}

.includeToken {
  background: var(--ds-color-success-surface-tinted);
  box-shadow: -1px 0 0 0 var(--ds-color-success-surface-tinted),
    1px 0 0 0 var(--ds-color-success-surface-tinted);
}

.excludeToken {
  background: var(--ds-color-danger-surface-tinted);
  box-shadow: -1px 0 0 0 var(--ds-color-danger-surface-tinted),
    1px 0 0 0 var(--ds-color-danger-surface-tinted);
}

.spacer {
  position: relative;
  width: var(--ds-border-width-default);
  height: var(--ds-size-12);
  border-top: var(--ds-border-width-default) solid var(--ds-color-neutral-border-subtle);
  border-bottom: var(--ds-border-width-default) solid var(--ds-color-neutral-border-subtle);
  &::after {
    content: "";
    display: block;
    width: 100%;
    height: 60%;
    background: var(--ds-color-neutral-border-subtle);
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
  }
}

.clearButton {
  position: absolute;
  top: var(--ds-size-1);
  right: var(--ds-size-2);
  
  display: flex;
  align-items: center;
  justify-content: center;
  padding: var(--ds-size-1);
  min-width: var(--ds-size-9);
  min-height: var(--ds-size-9);
  margin-right: calc(-1 * var(--ds-size-2)); // Negate padding
  scale: 0.75;
}

.clearIcon {
  height: 100%;
  width: 100%;
}

.actionButtonContainer {
  display: flex;
  flex-direction: row;
  button {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }
}

.searchIconButton {
  display: flex;
  align-items: center;
  justify-content: center;
  background: none;
  border: none;
  cursor: pointer;
  color: inherit;

  padding: 0;
  width: var(--ds-size-9);
  height: var(--ds-size-9);
}

.searchIcon {
  height: 100%;
  width: 100%;
}

.enhetSelector {
  flex-shrink: 0;
}
